import java.util.List;

public class Sort {
	
	public static List<CricketTeam> swap(List<CricketTeam> tempTeam, int i, int j){
		List<CricketTeam> teams = tempTeam;
		CricketTeam temp1 = teams.get(i);
		CricketTeam temp2 = teams.get(j);
		teams.remove(j);
		teams.remove(i);					
		teams.add(i, temp2);
		teams.add(j, temp1);
		return teams;
	}

	public static List<CricketTeam> selectionSortByPoints(List<CricketTeam> tempTeam) {
		List<CricketTeam> teams = tempTeam;
		System.out.println("Unsorted-" + teams.toString());
		int pass = 0, itr = 0, swap = 0;
		for(int i=0; i<teams.size()-1; i++) {
			pass++;
			for(int j=i+1; j<teams.size(); j++) {
				itr++;
				if(teams.get(i).getPoints()>teams.get(j).getPoints()) {
					swap++;
					teams = swap(teams, i, j);
				}
			}
		}
		return teams;
//		System.out.println("Pass = "+pass+" itr = "+itr+" swap = "+swap);
	}
	
	
	public static List<CricketTeam> selectionSortByTeamName(List<CricketTeam> tempTeam) {
		List<CricketTeam> teams = tempTeam;
		for(int i=0; i<teams.size()-1; i++) {
			for(int j=i+1; j<teams.size(); j++) {
				if((teams.get(i).getTeamName()).compareTo(teams.get(j).getTeamName()) > 0) {
					teams = swap(teams, i, j);
				}
			}
		}
		return teams;
	}
	
	public static List<CricketTeam> bubbleSortByPoints(List<CricketTeam> tempTeam) {
		List<CricketTeam> teams = tempTeam;
		Boolean flag = false;
		int pass = 0, itr = 0, swap = 0;
		for(int j = 1; j < teams.size(); j++) {
			pass++;
			for(int i = 0; i < teams.size()-j; i++) {
				itr++;
				if(teams.get(i).getPoints() > teams.get(i+1).getPoints()) {
					swap++;
					teams = swap(teams, i, i+1);
					flag = true;
				}
			}
			if(flag == false)
				break;
		}
		return teams;
//		System.out.println("Pass = "+pass+" itr = "+itr+" swap = "+swap);
	}

	public static List<CricketTeam> insertionSortByPoints(List<CricketTeam> tempTeam) {
		List<CricketTeam> teams = tempTeam;
		for(int i = 1; i < teams.size(); i++)
		{
			int j;
			CricketTeam temp = teams.get(i);
			for(j = i-1; j>=0 && teams.get(j).getPoints()>temp.getPoints();j--) {		//if first condition false second condition is not evaluated ==> &&
//				arr[j+1] = arr[j];
			
				teams.remove(j+1);
				teams.add(j+1, teams.get(j));
			}
			teams.remove(j+1);
			teams.add(j+1, teams.get(j));
		}
	}
}
